/**
 * Element Layer Controls Styles
 *
 * This file contains styles for the vertical layer control buttons
 * that appear next to a selected element in the document editor.
 */

// Main container
.element-layer-controls {
  position: absolute;
  top: 0;
  right: -60px; // Position to the right of the element
  width: 50px;
  background-color: rgba(255, 255, 255, 0.95);
  border: none;
  border-radius: 12px;
  display: flex;
  flex-direction: column; // Stack buttons vertically
  align-items: center;
  justify-content: center;
  padding: 10px 5px;
  z-index: 3000; // Ensure it's above the ruler (z-index: 1000)
  box-shadow: var(--shadow-md);
  font-size: 14px;
  pointer-events: all;
  backdrop-filter: blur(8px);
  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  animation: fadeIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: transform, opacity; // Optimize animations
  border-left: 3px solid var(--primary);

  &:hover {
    box-shadow: var(--shadow-lg);
    transform: translateX(-2px);
  }
}

// Layer info section (hidden in this layout)
.layer-info {
  display: none;
}

// Container for action buttons
.layer-actions {
  display: flex;
  flex-direction: column;
  gap: 6px;
  width: 100%;
}

// Action button style
.action-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 38px;
  height: 38px;
  border: none;
  background-color: rgba(255, 255, 255, 0.9);
  border-radius: 10px;
  cursor: pointer;
  color: var(--primary);
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  padding: 0;
  margin: 2px 0;
  box-shadow: var(--shadow-sm);
  position: relative;
  overflow: hidden;

  // Hover effect background
  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--primary);
    opacity: 0;
    transition: opacity 0.2s ease;
    border-radius: 10px;
    z-index: -1;
  }

  // Hover state
  &:hover {
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(var(--primary-rgb), 0.2);

    &::before {
      opacity: 1;
    }
  }

  // Active state
  &:active {
    transform: scale(0.95) translateY(0);
    box-shadow: 0 2px 8px rgba(var(--primary-rgb), 0.1);
  }

  // Disabled state
  &.disabled {
    color: var(--text-disabled);
    cursor: not-allowed;
    background-color: rgba(245, 247, 250, 0.5);
    box-shadow: none;

    &:hover {
      transform: none;
      color: var(--text-disabled);
      background-color: rgba(245, 247, 250, 0.5);
      box-shadow: none;

      &::before {
        opacity: 0;
      }
    }

    &:active {
      transform: none;
    }
  }
}

// Tooltip style
.layer-tooltip {
  font-size: 12px;
  padding: 6px 10px;
  background-color: rgba(30, 30, 30, 0.85);
  color: white;
  border-radius: 6px;
  box-shadow: var(--shadow-sm);
  backdrop-filter: blur(4px);
  font-weight: 500;
  letter-spacing: 0.3px;
  border-left: 2px solid var(--primary);
}

// Animation for controls appearance
@keyframes fadeIn {
  0% {
    opacity: 0;
    transform: translateX(15px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

// Responsive adjustments
@media (max-width: 768px) {
  .element-layer-controls {
    right: -50px;
    width: 40px;
    padding: 8px 4px;
  }

  .action-btn {
    width: 32px;
    height: 32px;
  }
}
